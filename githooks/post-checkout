#!/bin/bash
#
# See README.md for further details.
#
PREVIOUS_HEAD=$1
NEW_HEAD=$2
BRANCH_SWITCH=$3
NEW_BRANCH=$(git rev-parse --abbrev-ref HEAD)
AUTHORMAIL=$(git config --get user.email)
AUTHOR=$(git config --get user.name)
MIDDLEMANADDRESS=$(git config --get middleman.address)


if [[ $MIDDLEMANADDRESS == "" ]]
then
    echo "Need to know where I can contact the webapp.
Set it with:

    git config --global middleman.address 'http://middleman:3000'
    "
    exit 1
fi

#
# Notifies middleman webapp
#
function notify {
    BUG=$(expr $1 : 'bug_\([[:digit:]]\+\)')
    echo "Notify middleman that you work on #$BUG"
    response=$(curl --write-out %{http_code} --silent --data "email=$AUTHORMAIL&text=$NEW_BRANCH&bug=$BUG"  --output /dev/null $MIDDLEMANADDRESS/messages)
    if [[ $reponse != 200 ]]
    then
      email=$(curl --silent $MIDDLEMANADDRESS/bugs/$BUG.text)
      echo "$email currently works on $BUG"
    fi
}


#
# If we don't checkout a new branch, but stay on the branch, bail out.
#
# Note: This will still yield quite a bit of e-mail for every branch
# checkout.  Say hello to mail filters ;)
#
if [[ $BRANCH_SWITCH == 0 ]]
then
    exit 0
fi


if [[ $NEW_BRANCH =~ bug_[[:digit:]]+ ]]
then
    notify $BASH_REMATCH
else
    exit 0
fi
